{# 
notes:
#}
{
    "metadata": {
        "displayName": "{{gateway.displayname}}",
        "description": "{{gateway.description}}"
    },
    "desiredState": {
        "ingress": {
            "uris": {
{% for uri in ingress.uris %}
                "{{uri.ingress_uri}}": { 
{% if uri.matchMethod %}
                    "matchMethod": "{{uri.matchMethod}}",
{% endif %}
                    "tls": {
{% if uri.tls.certref.ref %}
                        "certRef": { "ref": "{{uri.tls.certref.ref}}" },
                        "protocols": "{{uri.tls.protocols}}",
                        "cipher": "{{uri.tls.cipher}}",
                        "preferServiceCipherServiceConfigState": "{{uri.tls.preferServiceCipherServiceConfigState}}",
                        "sessionCache": "{{uri.tls.sessionCache}}"
{% endif %}
                    }
                }{% if not loop.last %},
{% endif %}
{% endfor %}{{''}}
            },
{% if ingress.methods %}
            "methods": [
{% for method in ingress.methods %}
                "{{method}}"{% if not loop.last %}, 
{% endif %}
{% endfor %}{{''}}
            ],
{% endif %}
{% if ingress.headers %}
            "headers": [
{% for header in ingress.headers %}
                {
{% if header.name %}
                    "name": "{{header.name}}",
                    "nameMatchMethod": "{{header.nameMatchMethod}}"
{% elseif header.value %}
                    "value": "{{header.value}}",
                    "valueMatchMethod": "{{header.valueMatchMethod}}"
{% endif %}
                }{% if not loop.last %},
{% endif %}
{% endfor %}{{''}}
            ],
{% endif %}
{% if ingress.http2 %}
            "http2": "{{ingress.http2}}",
{% endif %}
{% if ingress.spdy %}
            "spdy": "{{ingress.spdy}}",
{% endif %}
{% if ingress.proxyProtocol %}
            "proxyProtocol": "{{ingress.proxyProtocol}}",
{% endif %}
{% if ingress.setFib %}
            "setFib": "{{ingress.setFib}}",
{% endif %}
{% if ingress.fastOpen %}
            "fastOpen": "{{ingress.fastOpen}}",
{% endif %}
{% if ingress.backlog %}
            "backlog": "{{ingress.backlog}}",
{% endif %}
{% if ingress.receiveBufferSize %}
            "receiveBufferSize": "{{ingress.receiveBufferSize}}",
{% endif %}
{% if ingress.sendBufferSize %}
            "sendBufferSize": "{{ingress.sendBufferSize}}",
{% endif %}
{% if ingress.acceptFilter %}
            "acceptFilter": "{{ingress.acceptFilter}}",
{% endif %}
{% if ingress.deferred %}
            "deferred": "{{ingress.deferred}}",
{% endif %}
{% if ingress.isIpv6Only %}
            "isIpv6Only": "{{ingress.isIpv6Only}}",
{% endif %}
{% if ingress.reusePort %}
            "reusePort": "{{ingress.reusePort}}"],
{% endif %}
            "tls": {
{% if ingress.tls.certRef.ref %}
                "certRef": { "ref": "{{uri.tls.certref.ref}}" },
                "protocols": "{{uri.tls.protocols}}",
                "cipher": "{{uri.tls.cipher}}",
                "preferServiceCipherServiceConfigState": "{{uri.tls.preferServiceCipherServiceConfigState}}",
                "sessionCache": "{{uri.tls.sessionCache}}"
{% endif %}
            },
{% if ingress.tcpKeepAlive.idle %}
            "tcpKeepAlive": {
                "idle": "string",
                "interval": "string",
                "count": 0
            },
{% endif %}
            "placement": {
                "instanceRefs": [
{% for instanceRef in ingress.placement.instanceRefs %}
                    {
                        "ref": "{{instanceRef}}"
                    }{% if not loop.last %},
{% endif %}
{% endfor %}{{''}}
                ]
            }
        }
    }
}